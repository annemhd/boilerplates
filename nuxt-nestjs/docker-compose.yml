services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development 
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development 
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - DATABASE_NAME=database
    command: npm run dev 
    depends_on:
      - db

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development # or production
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development # or production
      - DATABASE_HOST=db
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - DATABASE_NAME=database
    command: npm run start:dev # or npm run start:prod
    depends_on:
      - db

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: database
    ports:
      - "3306:3306" #optional, only if you need to connect from host. remove for production.
    volumes:
      - mysql_data:/var/lib/mysql

volumes:
  mysql_data: